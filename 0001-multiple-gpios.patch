From 6b9335d35d4c05eed031136578037087d188e36c Mon Sep 17 00:00:00 2001
From: Surjeet <karmakarsurjeet@gmail.com>
Date: Thu, 11 May 2023 10:13:07 +0530
Subject: [PATCH 1/1] multiple gpios

---
 examples/light/main/app_driver.cpp | 37 +++++++++++++++---------------
 examples/light/main/app_main.cpp   | 15 ++++++++----
 2 files changed, 29 insertions(+), 23 deletions(-)

diff --git a/examples/light/main/app_driver.cpp b/examples/light/main/app_driver.cpp
index 17cbc7a..83e76ce 100644
--- a/examples/light/main/app_driver.cpp
+++ b/examples/light/main/app_driver.cpp
@@ -55,7 +55,8 @@ static esp_err_t app_driver_light_set_temperature(led_driver_handle_t handle, es
 static void app_driver_button_toggle_cb(void *arg, void *data)
 {
     ESP_LOGI(TAG, "Toggle button pressed");
-    uint16_t endpoint_id = light_endpoint_id;
+     /* Pressing toggle button only toggles the led on endpoint 1 */
+     uint16_t endpoint_id = 1;
     uint32_t cluster_id = OnOff::Id;
     uint32_t attribute_id = OnOff::Attributes::OnOff::Id;
 
@@ -74,24 +75,22 @@ esp_err_t app_driver_attribute_update(app_driver_handle_t driver_handle, uint16_
                                       uint32_t attribute_id, esp_matter_attr_val_t *val)
 {
     esp_err_t err = ESP_OK;
-    if (endpoint_id == light_endpoint_id) {
-        led_driver_handle_t handle = (led_driver_handle_t)driver_handle;
-        if (cluster_id == OnOff::Id) {
-            if (attribute_id == OnOff::Attributes::OnOff::Id) {
-                err = app_driver_light_set_power(handle, val);
-            }
-        } else if (cluster_id == LevelControl::Id) {
-            if (attribute_id == LevelControl::Attributes::CurrentLevel::Id) {
-                err = app_driver_light_set_brightness(handle, val);
-            }
-        } else if (cluster_id == ColorControl::Id) {
-            if (attribute_id == ColorControl::Attributes::CurrentHue::Id) {
-                err = app_driver_light_set_hue(handle, val);
-            } else if (attribute_id == ColorControl::Attributes::CurrentSaturation::Id) {
-                err = app_driver_light_set_saturation(handle, val);
-            } else if (attribute_id == ColorControl::Attributes::ColorTemperatureMireds::Id) {
-                err = app_driver_light_set_temperature(handle, val);
-            }
+    led_driver_handle_t handle = (led_driver_handle_t)driver_handle;
+    if (cluster_id == OnOff::Id) {
+        if (attribute_id == OnOff::Attributes::OnOff::Id) {
+            err = app_driver_light_set_power(handle, val);
+        }
+    } else if (cluster_id == LevelControl::Id) {
+        if (attribute_id == LevelControl::Attributes::CurrentLevel::Id) {
+            err = app_driver_light_set_brightness(handle, val);
+        }
+    } else if (cluster_id == ColorControl::Id) {
+        if (attribute_id == ColorControl::Attributes::CurrentHue::Id) {
+            err = app_driver_light_set_hue(handle, val);
+        } else if (attribute_id == ColorControl::Attributes::CurrentSaturation::Id) {
+            err = app_driver_light_set_saturation(handle, val);
+        } else if (attribute_id == ColorControl::Attributes::ColorTemperatureMireds::Id) {
+            err = app_driver_light_set_temperature(handle, val);
         }
     }
     return err;
diff --git a/examples/light/main/app_main.cpp b/examples/light/main/app_main.cpp
index 64480a1..c49557f 100644
--- a/examples/light/main/app_main.cpp
+++ b/examples/light/main/app_main.cpp
@@ -16,6 +16,7 @@
 
 #include <app_priv.h>
 #include <app_reset.h>
+#include <led_driver.h>
 
 #include <app/server/CommissioningWindowManager.h>
 #include <app/server/Server.h>
@@ -128,7 +129,11 @@ extern "C" void app_main()
     nvs_flash_init();
 
     /* Initialize driver */
-    app_driver_handle_t light_handle = app_driver_light_init();
+    led_driver_config_t config_led_1 = {.gpio = 26};
+    led_driver_config_t config_led_2 = {.gpio = 27};
+
+    led_driver_handle_t handle_led_1 = led_driver_init(&config_led_1);
+    led_driver_handle_t handle_led_2 = led_driver_init(&config_led_2);
     app_driver_handle_t button_handle = app_driver_button_init();
     app_reset_button_register(button_handle);
 
@@ -144,10 +149,11 @@ extern "C" void app_main()
     light_config.color_control.color_mode = EMBER_ZCL_COLOR_MODE_COLOR_TEMPERATURE;
     light_config.color_control.enhanced_color_mode = EMBER_ZCL_COLOR_MODE_COLOR_TEMPERATURE;
     light_config.color_control.color_temperature.startup_color_temperature_mireds = nullptr;
-    endpoint_t *endpoint = extended_color_light::create(node, &light_config, ENDPOINT_FLAG_NONE, light_handle);
+    endpoint_t *endpoint1 = extended_color_light::create(node, &light_config, ENDPOINT_FLAG_NONE, handle_led_1);
+    endpoint_t *endpoint2 = extended_color_light::create(node, &light_config, ENDPOINT_FLAG_NONE, handle_led_2);
 
     /* These node and endpoint handles can be used to create/add other endpoints and clusters. */
-    if (!node || !endpoint) {
+    if (!node || !endpoint1 || !endpoint2) {
         ESP_LOGE(TAG, "Matter node creation failed");
     }
 
@@ -161,7 +167,8 @@ extern "C" void app_main()
     }
 
     /* Starting driver with default values */
-    app_driver_light_set_defaults(light_endpoint_id);
+    app_driver_light_set_defaults(1);
+    app_driver_light_set_defaults(2);
 
 #if CONFIG_ENABLE_CHIP_SHELL
     esp_matter::console::diagnostics_register_commands();
-- 
2.37.2

